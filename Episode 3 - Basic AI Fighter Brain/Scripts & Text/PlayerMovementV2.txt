#Booleans
var isCrouched = false
var allowedToCombo = false

#Integers
var directionX = 0
var speed = 30

#Floats
var timeTillNextInput = 1
var time
var deltaTime

#Vectors
var newPosition = Vector2()

#Strings
var nameOfInput = ""

#Arrays 
var keysUsed = []

#Objects
onready var playerAnim = $AnimationPlayer
onready var playerAnimTree = $AnimationTree.get("parameters/playback")

func _ready():
	time = timeTillNextInput

func _process(delta):
	deltaTime = delta
	
	newPosition = move_and_slide(newPosition)

func _input(event):
	
	if(allowedToCombo):
		time -= deltaTime
		if(time > 0):
			if(Input.is_action_just_pressed("ui_AnyKey")):
				keysUsed.append(event.as_text())
				time = timeTillNextInput
		else:
			playerAnimTree.travel(MoveSetManager.nameDictionary[name][keysUsed])
			keysUsed.empty()
			time = timeTillNextInput
			allowedToCombo = false
			return
	
	print(keysUsed)
	
	_Move_Player()


func _Move_Player():
	newPosition = Vector2()
	var currentAnim = playerAnimTree.get_current_node()
	
	if(Input.is_action_just_pressed("ui_punch")):
		if(!isCrouched):
			_Play_New_Animation("General", 1)
			return
		else:
			_Play_New_Animation("General", 3)
			return
	
	if(!isCrouched):
		if(Input.is_action_pressed("ui_MoveR")):
			directionX = 1
			allowedToCombo = true
		elif(Input.is_action_pressed("ui_MoveL")):
			directionX = -1
			allowedToCombo = true
		else:
			directionX = 0
	
	if(directionX == 0):
		if(Input.is_action_pressed("ui_crouch")):
			_Play_New_Animation("General", 5)
			isCrouched = true
			allowedToCombo = true
			return
		else:
			_Play_New_Animation("General", 6)
			isCrouched = false
			allowedToCombo = true
			return
	
	newPosition.x = directionX
	newPosition = newPosition.normalized() * speed 

func _Play_New_Animation(var name, var animID):